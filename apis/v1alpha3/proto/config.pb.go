// Copyright 2024 The Authors (see AUTHORS file)
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: proto/config.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StaticToken struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// This is the name of an environment variable to read from
	FromEnvironment string `protobuf:"bytes,1,opt,name=from_environment,json=fromEnvironment,proto3" json:"from_environment,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *StaticToken) Reset() {
	*x = StaticToken{}
	mi := &file_proto_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StaticToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaticToken) ProtoMessage() {}

func (x *StaticToken) ProtoReflect() protoreflect.Message {
	mi := &file_proto_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaticToken.ProtoReflect.Descriptor instead.
func (*StaticToken) Descriptor() ([]byte, []int) {
	return file_proto_config_proto_rawDescGZIP(), []int{0}
}

func (x *StaticToken) GetFromEnvironment() string {
	if x != nil {
		return x.FromEnvironment
	}
	return ""
}

type GitHubApp struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	AppId string                 `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	// keystore:// or KMS location of the private key
	KeyLocation   string `protobuf:"bytes,2,opt,name=key_location,json=keyLocation,proto3" json:"key_location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GitHubApp) Reset() {
	*x = GitHubApp{}
	mi := &file_proto_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GitHubApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitHubApp) ProtoMessage() {}

func (x *GitHubApp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitHubApp.ProtoReflect.Descriptor instead.
func (*GitHubApp) Descriptor() ([]byte, []int) {
	return file_proto_config_proto_rawDescGZIP(), []int{1}
}

func (x *GitHubApp) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *GitHubApp) GetKeyLocation() string {
	if x != nil {
		return x.KeyLocation
	}
	return ""
}

type GitHubConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EnterpriseUrl string                 `protobuf:"bytes,1,opt,name=enterprise_url,json=enterpriseUrl,proto3" json:"enterprise_url,omitempty"`
	// Types that are valid to be assigned to Authentication:
	//
	//	*GitHubConfig_StaticAuth
	//	*GitHubConfig_GhAppAuth
	Authentication isGitHubConfig_Authentication `protobuf_oneof:"authentication"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GitHubConfig) Reset() {
	*x = GitHubConfig{}
	mi := &file_proto_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GitHubConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitHubConfig) ProtoMessage() {}

func (x *GitHubConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitHubConfig.ProtoReflect.Descriptor instead.
func (*GitHubConfig) Descriptor() ([]byte, []int) {
	return file_proto_config_proto_rawDescGZIP(), []int{2}
}

func (x *GitHubConfig) GetEnterpriseUrl() string {
	if x != nil {
		return x.EnterpriseUrl
	}
	return ""
}

func (x *GitHubConfig) GetAuthentication() isGitHubConfig_Authentication {
	if x != nil {
		return x.Authentication
	}
	return nil
}

func (x *GitHubConfig) GetStaticAuth() *StaticToken {
	if x != nil {
		if x, ok := x.Authentication.(*GitHubConfig_StaticAuth); ok {
			return x.StaticAuth
		}
	}
	return nil
}

func (x *GitHubConfig) GetGhAppAuth() *GitHubApp {
	if x != nil {
		if x, ok := x.Authentication.(*GitHubConfig_GhAppAuth); ok {
			return x.GhAppAuth
		}
	}
	return nil
}

type isGitHubConfig_Authentication interface {
	isGitHubConfig_Authentication()
}

type GitHubConfig_StaticAuth struct {
	StaticAuth *StaticToken `protobuf:"bytes,2,opt,name=static_auth,json=staticAuth,proto3,oneof"`
}

type GitHubConfig_GhAppAuth struct {
	GhAppAuth *GitHubApp `protobuf:"bytes,3,opt,name=gh_app_auth,json=ghAppAuth,proto3,oneof"`
}

func (*GitHubConfig_StaticAuth) isGitHubConfig_Authentication() {}

func (*GitHubConfig_GhAppAuth) isGitHubConfig_Authentication() {}

// For now we only support GoogleGroup to authenticate
// using default application login.
type GoogleGroupsConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GoogleGroupsConfig) Reset() {
	*x = GoogleGroupsConfig{}
	mi := &file_proto_config_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GoogleGroupsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleGroupsConfig) ProtoMessage() {}

func (x *GoogleGroupsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_config_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleGroupsConfig.ProtoReflect.Descriptor instead.
func (*GoogleGroupsConfig) Descriptor() ([]byte, []int) {
	return file_proto_config_proto_rawDescGZIP(), []int{3}
}

type GitLabConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EnterpriseUrl string                 `protobuf:"bytes,1,opt,name=enterprise_url,json=enterpriseUrl,proto3" json:"enterprise_url,omitempty"`
	// This will need to be update once we are implementing for gitlab
	//
	// Types that are valid to be assigned to Authentication:
	//
	//	*GitLabConfig_StaticToken
	Authentication isGitLabConfig_Authentication `protobuf_oneof:"authentication"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GitLabConfig) Reset() {
	*x = GitLabConfig{}
	mi := &file_proto_config_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GitLabConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitLabConfig) ProtoMessage() {}

func (x *GitLabConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_config_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitLabConfig.ProtoReflect.Descriptor instead.
func (*GitLabConfig) Descriptor() ([]byte, []int) {
	return file_proto_config_proto_rawDescGZIP(), []int{4}
}

func (x *GitLabConfig) GetEnterpriseUrl() string {
	if x != nil {
		return x.EnterpriseUrl
	}
	return ""
}

func (x *GitLabConfig) GetAuthentication() isGitLabConfig_Authentication {
	if x != nil {
		return x.Authentication
	}
	return nil
}

func (x *GitLabConfig) GetStaticToken() *StaticToken {
	if x != nil {
		if x, ok := x.Authentication.(*GitLabConfig_StaticToken); ok {
			return x.StaticToken
		}
	}
	return nil
}

type isGitLabConfig_Authentication interface {
	isGitLabConfig_Authentication()
}

type GitLabConfig_StaticToken struct {
	StaticToken *StaticToken `protobuf:"bytes,2,opt,name=static_token,json=staticToken,proto3,oneof"`
}

func (*GitLabConfig_StaticToken) isGitLabConfig_Authentication() {}

type SourceConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Config:
	//
	//	*SourceConfig_GoogleGroupsConfig
	Config        isSourceConfig_Config `protobuf_oneof:"config"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SourceConfig) Reset() {
	*x = SourceConfig{}
	mi := &file_proto_config_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SourceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceConfig) ProtoMessage() {}

func (x *SourceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_config_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceConfig.ProtoReflect.Descriptor instead.
func (*SourceConfig) Descriptor() ([]byte, []int) {
	return file_proto_config_proto_rawDescGZIP(), []int{5}
}

func (x *SourceConfig) GetConfig() isSourceConfig_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *SourceConfig) GetGoogleGroupsConfig() *GoogleGroupsConfig {
	if x != nil {
		if x, ok := x.Config.(*SourceConfig_GoogleGroupsConfig); ok {
			return x.GoogleGroupsConfig
		}
	}
	return nil
}

type isSourceConfig_Config interface {
	isSourceConfig_Config()
}

type SourceConfig_GoogleGroupsConfig struct {
	GoogleGroupsConfig *GoogleGroupsConfig `protobuf:"bytes,1,opt,name=google_groups_config,json=googleGroupsConfig,proto3,oneof"`
}

func (*SourceConfig_GoogleGroupsConfig) isSourceConfig_Config() {}

type TargetConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Config:
	//
	//	*TargetConfig_GithubConfig
	//	*TargetConfig_GitlabConfig
	Config        isTargetConfig_Config `protobuf_oneof:"config"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TargetConfig) Reset() {
	*x = TargetConfig{}
	mi := &file_proto_config_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TargetConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetConfig) ProtoMessage() {}

func (x *TargetConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_config_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetConfig.ProtoReflect.Descriptor instead.
func (*TargetConfig) Descriptor() ([]byte, []int) {
	return file_proto_config_proto_rawDescGZIP(), []int{6}
}

func (x *TargetConfig) GetConfig() isTargetConfig_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *TargetConfig) GetGithubConfig() *GitHubConfig {
	if x != nil {
		if x, ok := x.Config.(*TargetConfig_GithubConfig); ok {
			return x.GithubConfig
		}
	}
	return nil
}

func (x *TargetConfig) GetGitlabConfig() *GitLabConfig {
	if x != nil {
		if x, ok := x.Config.(*TargetConfig_GitlabConfig); ok {
			return x.GitlabConfig
		}
	}
	return nil
}

type isTargetConfig_Config interface {
	isTargetConfig_Config()
}

type TargetConfig_GithubConfig struct {
	GithubConfig *GitHubConfig `protobuf:"bytes,2,opt,name=github_config,json=githubConfig,proto3,oneof"`
}

type TargetConfig_GitlabConfig struct {
	GitlabConfig *GitLabConfig `protobuf:"bytes,3,opt,name=gitlab_config,json=gitlabConfig,proto3,oneof"`
}

func (*TargetConfig_GithubConfig) isTargetConfig_Config() {}

func (*TargetConfig_GitlabConfig) isTargetConfig_Config() {}

type TeamLinkConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SourceConfig  *SourceConfig          `protobuf:"bytes,1,opt,name=source_config,json=sourceConfig,proto3" json:"source_config,omitempty"`
	TargetConfig  *TargetConfig          `protobuf:"bytes,2,opt,name=target_config,json=targetConfig,proto3" json:"target_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TeamLinkConfig) Reset() {
	*x = TeamLinkConfig{}
	mi := &file_proto_config_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeamLinkConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamLinkConfig) ProtoMessage() {}

func (x *TeamLinkConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_config_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamLinkConfig.ProtoReflect.Descriptor instead.
func (*TeamLinkConfig) Descriptor() ([]byte, []int) {
	return file_proto_config_proto_rawDescGZIP(), []int{7}
}

func (x *TeamLinkConfig) GetSourceConfig() *SourceConfig {
	if x != nil {
		return x.SourceConfig
	}
	return nil
}

func (x *TeamLinkConfig) GetTargetConfig() *TargetConfig {
	if x != nil {
		return x.TargetConfig
	}
	return nil
}

var File_proto_config_proto protoreflect.FileDescriptor

var file_proto_config_proto_rawDesc = string([]byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x22,
	0x38, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x29,
	0x0a, 0x10, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x72, 0x6f, 0x6d, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x45, 0x0a, 0x09, 0x47, 0x69, 0x74,
	0x48, 0x75, 0x62, 0x41, 0x70, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x6b, 0x65, 0x79, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6b, 0x65, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xba, 0x01, 0x0a, 0x0c, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x70, 0x72, 0x69, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x39, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x41,
	0x75, 0x74, 0x68, 0x12, 0x36, 0x0a, 0x0b, 0x67, 0x68, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x61, 0x75,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x41, 0x70, 0x70, 0x48, 0x00,
	0x52, 0x09, 0x67, 0x68, 0x41, 0x70, 0x70, 0x41, 0x75, 0x74, 0x68, 0x42, 0x10, 0x0a, 0x0e, 0x61,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x14, 0x0a,
	0x12, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x22, 0x84, 0x01, 0x0a, 0x0c, 0x47, 0x69, 0x74, 0x4c, 0x61, 0x62, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x73, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x3b, 0x0a, 0x0c, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x63, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x10, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6b, 0x0a, 0x0c, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x51, 0x0a, 0x14, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x12, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x08, 0x0a,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x98, 0x01, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3e, 0x0a, 0x0d, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x69, 0x74, 0x48,
	0x75, 0x62, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0c, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3e, 0x0a, 0x0d, 0x67, 0x69, 0x74, 0x6c,
	0x61, 0x62, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x69, 0x74, 0x4c,
	0x61, 0x62, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0c, 0x67, 0x69, 0x74, 0x6c,
	0x61, 0x62, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x22, 0x8c, 0x01, 0x0a, 0x0e, 0x54, 0x65, 0x61, 0x6d, 0x4c, 0x69, 0x6e, 0x6b, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3c, 0x0a, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x3c, 0x0a, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x42, 0x92, 0x01, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x61, 0x70, 0x69, 0x42, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61,
	0x62, 0x63, 0x78, 0x79, 0x7a, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x2d, 0x6c, 0x69, 0x6e, 0x6b, 0x2f,
	0x61, 0x70, 0x69, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x33, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0xa2, 0x02, 0x03, 0x50, 0x41, 0x58, 0xaa, 0x02, 0x09, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x70, 0x69, 0xca, 0x02, 0x09, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5c, 0x41, 0x70,
	0x69, 0xe2, 0x02, 0x15, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0a, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_proto_config_proto_rawDescOnce sync.Once
	file_proto_config_proto_rawDescData []byte
)

func file_proto_config_proto_rawDescGZIP() []byte {
	file_proto_config_proto_rawDescOnce.Do(func() {
		file_proto_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_config_proto_rawDesc), len(file_proto_config_proto_rawDesc)))
	})
	return file_proto_config_proto_rawDescData
}

var file_proto_config_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_config_proto_goTypes = []any{
	(*StaticToken)(nil),        // 0: proto.api.StaticToken
	(*GitHubApp)(nil),          // 1: proto.api.GitHubApp
	(*GitHubConfig)(nil),       // 2: proto.api.GitHubConfig
	(*GoogleGroupsConfig)(nil), // 3: proto.api.GoogleGroupsConfig
	(*GitLabConfig)(nil),       // 4: proto.api.GitLabConfig
	(*SourceConfig)(nil),       // 5: proto.api.SourceConfig
	(*TargetConfig)(nil),       // 6: proto.api.TargetConfig
	(*TeamLinkConfig)(nil),     // 7: proto.api.TeamLinkConfig
}
var file_proto_config_proto_depIdxs = []int32{
	0, // 0: proto.api.GitHubConfig.static_auth:type_name -> proto.api.StaticToken
	1, // 1: proto.api.GitHubConfig.gh_app_auth:type_name -> proto.api.GitHubApp
	0, // 2: proto.api.GitLabConfig.static_token:type_name -> proto.api.StaticToken
	3, // 3: proto.api.SourceConfig.google_groups_config:type_name -> proto.api.GoogleGroupsConfig
	2, // 4: proto.api.TargetConfig.github_config:type_name -> proto.api.GitHubConfig
	4, // 5: proto.api.TargetConfig.gitlab_config:type_name -> proto.api.GitLabConfig
	5, // 6: proto.api.TeamLinkConfig.source_config:type_name -> proto.api.SourceConfig
	6, // 7: proto.api.TeamLinkConfig.target_config:type_name -> proto.api.TargetConfig
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_proto_config_proto_init() }
func file_proto_config_proto_init() {
	if File_proto_config_proto != nil {
		return
	}
	file_proto_config_proto_msgTypes[2].OneofWrappers = []any{
		(*GitHubConfig_StaticAuth)(nil),
		(*GitHubConfig_GhAppAuth)(nil),
	}
	file_proto_config_proto_msgTypes[4].OneofWrappers = []any{
		(*GitLabConfig_StaticToken)(nil),
	}
	file_proto_config_proto_msgTypes[5].OneofWrappers = []any{
		(*SourceConfig_GoogleGroupsConfig)(nil),
	}
	file_proto_config_proto_msgTypes[6].OneofWrappers = []any{
		(*TargetConfig_GithubConfig)(nil),
		(*TargetConfig_GitlabConfig)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_config_proto_rawDesc), len(file_proto_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_config_proto_goTypes,
		DependencyIndexes: file_proto_config_proto_depIdxs,
		MessageInfos:      file_proto_config_proto_msgTypes,
	}.Build()
	File_proto_config_proto = out.File
	file_proto_config_proto_goTypes = nil
	file_proto_config_proto_depIdxs = nil
}
